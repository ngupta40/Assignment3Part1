//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RestFulService.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Top10Words", ReplyAction="http://tempuri.org/IService1/Top10WordsResponse")]
        string[] Top10Words(string url);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Top10Words", ReplyAction="http://tempuri.org/IService1/Top10WordsResponse")]
        System.Threading.Tasks.Task<string[]> Top10WordsAsync(string url);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WordFilter", ReplyAction="http://tempuri.org/IService1/WordFilterResponse")]
        string WordFilter(string str);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WordFilter", ReplyAction="http://tempuri.org/IService1/WordFilterResponse")]
        System.Threading.Tasks.Task<string> WordFilterAsync(string str);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TransactionSummary", ReplyAction="http://tempuri.org/IService1/TransactionSummaryResponse")]
        string TransactionSummary(string filePath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TransactionSummary", ReplyAction="http://tempuri.org/IService1/TransactionSummaryResponse")]
        System.Threading.Tasks.Task<string> TransactionSummaryAsync(string filePath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TopNearByPlaceFinder", ReplyAction="http://tempuri.org/IService1/TopNearByPlaceFinderResponse")]
        string[] TopNearByPlaceFinder(string zipCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TopNearByPlaceFinder", ReplyAction="http://tempuri.org/IService1/TopNearByPlaceFinderResponse")]
        System.Threading.Tasks.Task<string[]> TopNearByPlaceFinderAsync(string zipCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/StringPurifier", ReplyAction="http://tempuri.org/IService1/StringPurifierResponse")]
        string StringPurifier(string str, string parentFunc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/StringPurifier", ReplyAction="http://tempuri.org/IService1/StringPurifierResponse")]
        System.Threading.Tasks.Task<string> StringPurifierAsync(string str, string parentFunc);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : RestFulService.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<RestFulService.ServiceReference1.IService1>, RestFulService.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string[] Top10Words(string url) {
            return base.Channel.Top10Words(url);
        }
        
        public System.Threading.Tasks.Task<string[]> Top10WordsAsync(string url) {
            return base.Channel.Top10WordsAsync(url);
        }
        
        public string WordFilter(string str) {
            return base.Channel.WordFilter(str);
        }
        
        public System.Threading.Tasks.Task<string> WordFilterAsync(string str) {
            return base.Channel.WordFilterAsync(str);
        }
        
        public string TransactionSummary(string filePath) {
            return base.Channel.TransactionSummary(filePath);
        }
        
        public System.Threading.Tasks.Task<string> TransactionSummaryAsync(string filePath) {
            return base.Channel.TransactionSummaryAsync(filePath);
        }
        
        public string[] TopNearByPlaceFinder(string zipCode) {
            return base.Channel.TopNearByPlaceFinder(zipCode);
        }
        
        public System.Threading.Tasks.Task<string[]> TopNearByPlaceFinderAsync(string zipCode) {
            return base.Channel.TopNearByPlaceFinderAsync(zipCode);
        }
        
        public string StringPurifier(string str, string parentFunc) {
            return base.Channel.StringPurifier(str, parentFunc);
        }
        
        public System.Threading.Tasks.Task<string> StringPurifierAsync(string str, string parentFunc) {
            return base.Channel.StringPurifierAsync(str, parentFunc);
        }
    }
}
